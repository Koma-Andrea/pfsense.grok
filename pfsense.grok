##################################
# GROK PATTERN LANGUAGE #
##################################

#Common
PFS_1 %{NUMBER:rule_number}
PFS_2 %{NUMBER:sub_rule_number}
PFS_3 %{GREEDYDATA:anchor}
PFS_4 %{NUMBER:tracker}
PFS_5 (?<iface>(vmx|em)[0-9])
PFS_6 %{GREEDYDATA:reason}
PFS_7 %{GREEDYDATA:action}
PFS_8 (?<direction>in|out)
#PFS_9 (?<ip_version>(6|4))

PFS_COMMON %{PFS_1},%{PFS_2},%{PFS_3},%{PFS_4},%{PFS_5},%{PFS_6},%{PFS_7},%{PFS_8}

#IPV4
PFS_V4_VER (4)
PFS_V4_1 %{GREEDYDATA:tos}
PFS_V4_2 %{GREEDYDATA:ecn}
PFS_V4_3 %{GREEDYDATA:ttl}
PFS_V4_4 %{GREEDYDATA:id}
PFS_V4_5 %{GREEDYDATA:offset}
PFS_V4_6 %{GREEDYDATA:flags}
PFS_V4_7 %{GREEDYDATA:protocol_id}
PFS_V4_8 %{GREEDYDATA:protocol_text}

PFS_V4 %{PFS_V4_VER:ip_version},%{PFS_V4_1},%{PFS_V4_2},%{PFS_V4_3},%{PFS_V4_4},%{PFS_V4_5},%{PFS_V4_6},%{PFS_V4_7},%{PFS_V4_8}

#IPV6
PFS_V6_VER (6)
PFS_V6_1 %{GREEDYDATA:class}
PFS_V6_2 %{GREEDYDATA:flow_label}
PFS_V6_3 %{GREEDYDATA:hop_limit}
PFS_V6_4 %{WORD:protocol_text}
PFS_V6_5 %{WORD:protocol_id}

PFS_V6 %{PFS_V6_VER:ip_version},%{PFS_V6_1},%{PFS_V6_2},%{PFS_V6_3},%{PFS_V6_4},%{PFS_V6_5}


#Options
PFS_V6O_1 %{GREEDYDATA:class}
PFS_V6O_2 %{GREEDYDATA:flow_label}
PFS_V6O_3 %{GREEDYDATA:hop_limit}
PFS_V6O_4 Options
PFS_V6O_5 %{WORD:protocol_id}

PFS_V6O %{PFS_V6_VER:ip_version},%{PFS_V6O_1},%{PFS_V6O_2},%{PFS_V6O_3},%{PFS_V6O_4:NOT_PROTOCOL},%{PFS_V6O_5}

#IPV6-4
PFS_VX_1 %{NOTSPACE:lenght}
PFS_VX_2 %{IP:source_ip}
PFS_VX_3 %{IP:dest_ip}

PFS_IPDATA %{PFS_VX_1},%{PFS_VX_2},%{PFS_VX_3}


PFSENSE_LINE %{PFS_COMMON},(%{PFS_V4}|%{PFS_V6O}|%{PFS_V6}),%{PFS_IPDATA}(,%{PF_PRT_SPECIFIC_DATA})?(,%{GREEDYDATA:unknown_options})?



PF_PRT_SPECIFIC_DATA_UDP_TCP %{PFS_PRT_UDP}(,%{PFS_PRT_TCP})?
PF_PRT_SPECIFIC_DATA %{PF_PRT_SPECIFIC_DATA_UDP_TCP}|%{ICMP_TYPE_DATA}

#Per tcp e udp la prima parte Ã¨ uguale (udp si ferma a PFS_PRT_TCPUDP)
PFS_PRT_TCPUDP_1 %{NUMBER:source_port}
PFS_PRT_TCPUDP_2 %{NUMBER:destination_port}
PFS_PRT_TCPUDP_3 %{NUMBER:data_lenght}

PFS_PRT_UDP %{PFS_PRT_TCPUDP_1},%{PFS_PRT_TCPUDP_2},%{PFS_PRT_TCPUDP_3}
PFS_PRT_TCP (%{PFS_PRT_TCP_1})?,(%{PFS_PRT_TCP_2})?,(%{PFS_PRT_TCP_3})?,(%{PFS_PRT_TCP_4})?,(%{PFS_PRT_TCP_5})?,(%{PFS_PRT_TCP_6})?

PFS_PRT_TCP_1 %{WORD:tcp_flags}
PFS_PRT_TCP_2 %{NUMBER:sequence_number}
PFS_PRT_TCP_3 %{NUMBER:ack_number}
PFS_PRT_TCP_4 %{NUMBER:tcp_window}
PFS_PRT_TCP_5 %{WORD:urg}
PFS_PRT_TCP_6 %{GREEDYDATA:tcp_options}




ICMP_TYPE_DATA %{ICMP_ECHO_DATA}|%{ICMP_PROT_UNR}|%{ICMP_PORT_UNR}|%{ICMP_FRAGM}|%{ICMP_TSTAMP}|%{ICMP_TREPL}|%{IGMP_INFO}|%{CARP_TYPE}|%{ICMP_DESC}

#ICMP_TYPE=Request or Reply (echo data)
ICMP_REQREP_TEXT reply
ICMP_REQREP_1 %{NUMBER:icmp_id}
ICMP_REQREP_2 %{NUMBER:icmp_seq}
ICMP_ECHO_DATA %{ICMP_REQREP_TEXT:icmp_type},%{ICMP_REQREP_1},%{ICMP_REQREP_2}



#ICMP_PROT_UNR icmp protocol unreachable
ICMP_PROT_UNR_TEXT unreachproto
ICMP_PROT_UNR_1 %{IP:icmp_destionation_ip}
ICMP_PROT_UNR_2 %{NUMBER:icmp_protocol_id}
ICMP_PROT_UNR %{ICMP_PROT_UNR_TEXT:icmp_type},%{ICMP_PROT_UNR_1},%{ICMP_PROT_UNR_2}


#ICMP_PORT_UNR icmp port unreachable
ICMP_PORT_UNR_TEXT unreachport
ICMP_PORT_UNR_1 %{IP:icmp_destionation_ip}
ICMP_PORT_UNR_2 %{WORD:icmp_protocol_id}
ICMP_PORT_UNR_3 %{NUMBER:icmp_port_number}
ICMP_PORT_UNR %{ICMP_PORT_UNR_TEXT:icmp_type},%{ICMP_PORT_UNR_1},%{ICMP_PORT_UNR_2},%{ICMP_PORT_UNR_3}


#ICMP_OTHER (other)
ICMP_DESC %{WORD:icmp_description}

#ICMP_FRAGM Need Fragmentation
ICMP_FRAG_TEXT needfrag
ICMP_FRAG_1 %{IP:icmp_destionation_ip}
ICMP_FRAG_2 %{NUMBER:icmp_MTU}
ICMP_FRAGM %{ICMP_FRAG_TEXT:icmp_type},%{ICMP_FRAG_1},%{ICMP_FRAG_2}


#ICMP tstamp
ICMP_TSTAMP_TEXT tstamp
ICMP_TSTAMP_ID %{NUMBER:icmp_tstamp_id}
ICMP_TSTAMP_SEQ %{NUMBER:icmp_tstamp_seq}
ICMP_TSTAMP %{ICMP_TSTAMP_TEXT},%{ICMP_TSTAMP_ID},%{ICMP_TSTAMP_SEQ}


#<tstampreply-data> ::= <icmp-id>,<icmp-sequence>,<icmp-otime>,<icmp-rtime>,<icmp-ttime> 

ICMP_TREPL_TEXT tstampreply
ICMP_TREPL_OTIME %{GREEDYDATA:icmp_tstampreply_otime}
ICMP_TREPL_RTIME %{GREEDYDATA:icmp_tstampreply_rtime}
ICMP_TREPL_TTIME %{GREEDYDATA:icmp_tstampreply_ttime}
ICMP_TREPL %{ICMP_TREPL_TEXT},%{ICMP_TREPL_OTIME},%{ICMP_TREPL_RTIME},%{ICMP_TREPL_TTIME}

#IGMP
IGMP_INFO datalength=%{NUMBER:igmp_datalength}


#CARP_112 (Protocol ID 112):
CARP_TYPE_TEXT (CARP|VRRP|carp|vrrp|vrrp2|vrrpv2)
CARP_TTL %{NUMBER:carp_ttl}
CARP_VHID %{NUMBER:carp_vhid}
CARP_VERSION %{NUMBER:carp_version}
CARP_ADVSKEW %{NUMBER:carp_advskew}
CARP_ADVBASE %{NUMBER:carp_advbase}
CARP_TYPE %{CARP_TYPE_TEXT:carp_type},%{CARP_TTL},%{CARP_VHID},%{CARP_VERSION},%{CARP_ADVSKEW},%{CARP_ADVBASE}




######## PROGRAMS #########
#DHCPD
PF_DHCPD_ERRORS (Unable to add forward map)
PF_DHCPD_ACTIONS (DHCPACK|DHCPREQUEST)
PF_DHCPD ^%{PF_DHCPD_ACTIONS:dhcpd_action} (on|for) %{IP:client_lease_ip} (to|from) %{NOTSPACE:client_lease_mac}( \(%{NOTSPACE:client_name}\))? via %{WORD:dhcp_int}
PF_DHCPD_LOG_1 %{PF_DHCPD_ERRORS:dhcpd_error} from %{NOTSPACE:client_name} to %{IP:client_lease_ip}: %{GREEDYDATA:error_reason}
PF_LEASE_FILE_ACTIONS (deleted host decls|new dynamic host decls|leases)
PF_DHCPD_LOG_2 Wrote %{NUMBER:number_of_line} %{PF_LEASE_FILE_ACTIONS:lease_file_action} to leases file.
PF_DHCPD_LOG %{PF_DHCPD_LOG_1}|%{PF_DHCPD_LOG_2}
#MATCHER
PFSENSE_DHCPD %{PF_DHCPD}|%{PF_DHCPD_LOG}




####Openvpn###
#Specifici
PF_OVPN_1 ^%{PF_OVPN_ID} Control Channel: %{NOTSPACE:ovpn_control_channel}, cipher %{GREEDYDATA:opvn_cypher}
PF_OVPN_2 ^%{PF_OVPN_ID} Data Channel %{PF_OVPN_DATA_CH_ACT}: Cipher '%{GREEDYDATA:ovpn_cypher}' initialized with %{NUMBER:ovpn_cypher_key_length} bit key
PF_OVPN_3 ^%{PF_OVPN_ID} Data Channel %{PF_OVPN_DATA_CH_ACT}: Using %{PF_OVPN_MESSAGE_BIT} bit message hash '%{NOTSPACE:ovpn_hash_type}' for %{WORD:ovpn_type_authentication} authentication
PF_OVPN_4 ^%{PF_OVPN_ID} Data Channel Encrypt: Using 160 bit message hash 'SHA1' for HMAC authentication
PF_OVPN_5 ^%{PF_OVPN_ID} TLS: Initial packet from [AF_INET]212.97.35.10:58874, sid=14c651e9 e8a35ccd
PF_OVPN_6 ^%{PF_OVPN_ID} MULTI: Learn: %{IP:client_transport_ip} -> %{PF_OVPN_ID}
#PF_OVPN_7 ^MANAGEMENT: CMD '%{GREEDYDATA:ovpn_command}'
PF_OVPN_7 ^MANAGEMENT: (CMD ')?%{GREEDYDATA:ovpn_message}(')?
PF_OVPN_8 ^%{PF_OVPN_ID} %{WORD:opvn_command}: Received control message: '%{GREEDYDATA:ovpn_control_message}'
PF_OVPN_9 ^user '%{NOTSPACE:client_username}' %{GREEDYDATA:openvpn_message}
PF_OVPN_10 ^%{PF_OVPN_ID} MULTI: primary virtual IP for %{PF_OVPN_ID}: %{IP:ovpn_primary_vip}
PF_OVPN_11 ^%{PF_OVPN_ID} (?<ovpn_command>SENT CONTROL) \[%{NOTSPACE}\]: '%{GREEDYDATA:ovpn_control_message}' \(status=%{NUMBER:ovpn_command_result}\)


#Generici
PF_OVPN_98 ^%{NOTSPACE:client_username}/%{IP:client_ip}:%{NUMBER:client_port} %{GREEDYDATA:openvpn_message}
PF_OVPN_99 ^%{IP:client_ip}:%{NUMBER:client_port} %{GREEDYDATA:openvpn_message}

#Variabili
PF_OVPN_DATA_CH_ACT (?<data_channel_action>Decrypt|Encrypt)
PF_OVPN_MESSAGE_BIT %{NUMBER:message_bit_length}
PF_OVPN_ID (%{IP:client_ip}:%{NUMBER:client_port}|%{NOTSPACE:client_username}/%{IP:client_ip}:%{NUMBER:client_port})

#Matcher (PF_OVPN)
PF_OVPN %{PF_OVPN_1}|%{PF_OVPN_2}|%{PF_OVPN_3}|%{PF_OVPN_4}|%{PF_OVPN_5}|%{PF_OVPN_6}|%{PF_OVPN_7}|%{PF_OVPN_8}|%{PF_OVPN_9}|%{PF_OVPN_10}|%{PF_OVPN_11}|%{PF_OVPN_98}|%{PF_OVPN_99}


#END
